<UserControl x:Class="KojangTalk.BubbleContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KojangTalk"
             mc:Ignorable="d" 
             xmlns:core="clr-namespace:KojangTalk.Core;assembly=KojangTalk.Core"
             d:DataContext="{x:Static core:ChatAttachmentPopupMenuDesignModel.Instance}"
             
            >
       <!-- ChatAttachmentPopupMenuDesignModel은 VIewModel을 상속함 ViewModel 에는 데이터를 포함하고 있는 Items가 있음-->
              
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

    
        <Border CornerRadius="10"
                    Padding="15"
                    Margin="5 0 0 0"
                    Background="{Binding BubbleBackground, Converter={local:StringRGBToBrushConverter}}"
                    >

            <Border.Effect>
                <DropShadowEffect BlurRadius="4" ShadowDepth="2" Color="{StaticResource WordLightBlue}" />
            </Border.Effect>
            
            <!--컨버터를 통해서 반환되는 것은 VerticalMenu이다. 이것을 Content에 바인딩-->
            <!--ChatAttachmentPopupMenuDesignModel 가 전체 DataContext임 컨버터 파라미터로 들어감 암시적-->
            <!--컨버터는 VerticalMenu라는 control을 반환한다. -->
            <!--컨버터를 사용한 이유는???     -->
            <ContentControl Content="{Binding Converter={local:PopupContentConverter}}"/>
            <!--<local:VerticalMenu 
           
            DataContext="{x:Static core:MenuDesignModel.Instacne}"
            />-->


        </Border>

       
        <Path Grid.Row="1" 
              
              Stroke="Black"
              Panel.ZIndex="1"
              Margin="15 -1 15 0"
              Data="M 0,0 L 10,10 L 20,0 L 0,0" 
              StrokeThickness="0"
              
             
              Fill="{Binding BubbleBackground, Converter={local:StringRGBToBrushConverter}}">

            <Path.Effect>
                <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="{StaticResource WordLightBlue}" />
            </Path.Effect>

        </Path>

    </Grid>
</UserControl>
